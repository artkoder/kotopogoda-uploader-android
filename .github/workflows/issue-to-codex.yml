name: Issue → Draft PR → Codex
on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  kick:
    if: startsWith(github.event.comment.body, '/codex')
    runs-on: ubuntu-latest
    steps:
      - name: Extract message
        id: msg
        run: |
          body='${{ github.event.comment.body }}'
          echo "msg<<EOF" >> $GITHUB_OUTPUT
          echo "${body#/codex }" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}

      - name: Create (or reuse) branch and empty commit
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          set -e
          BRANCH="codex/issue-${ISSUE_NUMBER}"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
      
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
          # если ветка уже есть на origin — подтягиваем и работаем в ней
          if git ls-remote --exit-code --heads origin "$BRANCH" >/dev/null 2>&1; then
            git fetch origin "$BRANCH:$BRANCH"
            git checkout "$BRANCH"
          else
            git checkout -b "$BRANCH"
          fi

          # всегда создаём пустой коммит, чтобы сдвинуть CI
          git commit --allow-empty -m "chore: start Codex task for issue #${ISSUE_NUMBER}" || true
          git push -u origin "$BRANCH" || true

      - name: Open draft PR (copy Issue body as plan)
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner, repo = context.repo.repo;
            const branch = process.env.BRANCH;
            const base   = context.payload.repository.default_branch;
            const issue  = context.payload.issue;
      
            // если PR с этой ветки уже открыт — используем его
            const existing = await github.rest.pulls.list({
              owner, repo, head: `${owner}:${branch}`, state: 'open'
            });
            let pr;
            if (existing.data.length) {
              pr = existing.data[0];
            } else {
              const body = ['## План', issue.body || '', '', `Closes #${issue.number}`].join('\n');
              pr = (await github.rest.pulls.create({
                owner, repo, title: `[Codex] ${issue.title}`, head: branch, base, draft: true, body
              })).data;
            }
      
            // помечаем (если уже есть — просто игнорируем ошибку)
            try {
              await github.rest.issues.addLabels({
                owner, repo, issue_number: pr.number, labels: ['codex:plan','codex:step-0']
              });
            } catch {}
      
            core.setOutput('number', String(pr.number));


      - name: Start Codex in PR (Step 1 or free-form)
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ steps.pr.outputs.number }}
          MSG: ${{ steps.msg.outputs.msg }}
        with:
          script: |
            const prNumber = Number(process.env.PR_NUMBER || '0');
            const msg = (process.env.MSG || '').trim();

            const body = [
              '@codex',
              'Всегда отвечай и комментируй **на русском**.',
              'Начни работу по задаче из связанного Issue. Открой изменения в этом PR.',
              msg ? `Дополнительно: ${msg}` : '',
              '',
              'Правила: коммиты маленькие; тесты/линт перед каждым шагом.'
            ].filter(Boolean).join('\n');

            await github.rest.issues.createComment({
              owner: context.repo.owner, repo: context.repo.repo,
              issue_number: prNumber, body
            });
