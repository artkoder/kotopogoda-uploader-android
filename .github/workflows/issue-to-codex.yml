name: Issue → Draft PR → Codex
on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  kick:
    if: startsWith(github.event.comment.body, '/codex')
    runs-on: ubuntu-latest
    steps:
      - name: Extract message
        id: msg
        run: |
          body='${{ github.event.comment.body }}'
          echo "msg<<EOF" >> $GITHUB_OUTPUT
          echo "${body#/codex }" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}

      - name: Create branch and empty commit
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          set -e
          BRANCH="codex/issue-${ISSUE_NUMBER}"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BRANCH"
          git commit --allow-empty -m "chore: start Codex task for issue #${ISSUE_NUMBER}"
          git push -u origin "$BRANCH"

      - name: Open draft PR (copy Issue body as plan)
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const branch = process.env.BRANCH; // из предыдущего шага (GITHUB_ENV)
            const base = context.payload.repository.default_branch;
            const issue = context.payload.issue;

            const prBody = [
              '## План',
              issue.body || '',
              '',
              `Closes #${issue.number}`
            ].join('\n');

            const pr = await github.rest.pulls.create({
              owner: context.repo.owner, repo: context.repo.repo,
              title: `[Codex] ${issue.title}`,
              head: branch, base, draft: true,
              body: prBody
            });

            await github.rest.issues.addLabels({
              owner: context.repo.owner, repo: context.repo.repo,
              issue_number: pr.data.number,
              labels: ['codex:plan','codex:step-0']
            });

            core.setOutput('number', pr.data.number);

      - name: Start Codex in PR (Step 1 or free-form)
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ steps.pr.outputs.number }}
          MSG: ${{ steps.msg.outputs.msg }}
        with:
          script: |
            const prNumber = Number(process.env.PR_NUMBER || '0');
            const msg = (process.env.MSG || '').trim();

            const body = [
              '@codex',
              'Всегда отвечай и комментируй **на русском**.',
              'Начни работу по задаче из связанного Issue. Открой изменения в этом PR.',
              msg ? `Дополнительно: ${msg}` : '',
              '',
              'Правила: коммиты маленькие; тесты/линт перед каждым шагом.'
            ].filter(Boolean).join('\n');

            await github.rest.issues.createComment({
              owner: context.repo.owner, repo: context.repo.repo,
              issue_number: prNumber, body
            });
