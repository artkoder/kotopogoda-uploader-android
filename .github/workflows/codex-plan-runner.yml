name: Codex Plan Runner
on:
  check_suite:
    types: [completed]

permissions:
  pull-requests: write
  issues: write

jobs:
  next-step:
    if: >
      github.event.check_suite.pull_requests[0].number != null &&
      github.event.check_suite.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Compute next step
        id: step
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.check_suite.pull_requests[0];

            const prData = await github.rest.pulls.get({
              owner: context.repo.owner, repo: context.repo.repo, pull_number: pr.number
            });

            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner, repo: context.repo.repo, issue_number: pr.number
            });
            const stepLabel = labels.find(l => l.name.startsWith('codex:step-'));
            const idx = stepLabel ? parseInt(stepLabel.name.split('-')[2],10) : 0;

            const lines = (prData.data.body || '').split('\n');
            const tasks = lines
              .filter(l => /^\s*-\s\[[ x]\]\s+/.test(l))
              .map(l => l.replace(/^\s*-\s\[[ x]\]\s+/, '').trim());

            if (!tasks.length || idx >= tasks.length) {
              core.setOutput('done', 'true');
              return;
            }
            core.setOutput('index', String(idx));
            core.setOutput('next', tasks[idx]);

        - name: Ask Codex to do next step (ru)
          if: steps.step.outputs.done != 'true'
          uses: actions/github-script@v7
          env:
            STEP_INDEX: ${{ steps.step.outputs.index }}
            STEP_TASK: ${{ steps.step.outputs.next }}
          with:
            script: |
              const pr  = context.payload.check_suite.pull_requests[0];
              const idx = Number(process.env.STEP_INDEX || '0');
              const task = (process.env.STEP_TASK || '').trim();

              const body = [
                '@codex',
                'Всегда отвечай и комментируй **на русском**.',
                `Продолжи: выполни следующий шаг плана — **${task}**.`,
                'Помни: коммиты маленькие; тесты/линт перед следующим шагом; если остаётся красным — остановись и кратко опиши причину.'
              ].join('\n');

              await github.rest.issues.createComment({
                owner: context.repo.owner, repo: context.repo.repo,
                issue_number: pr.number, body
              });

              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner, repo: context.repo.repo,
                  issue_number: pr.number, name: `codex:step-${idx}`
                });
              } catch {}

              await github.rest.issues.addLabels({
                owner: context.repo.owner, repo: context.repo.repo,
                issue_number: pr.number, labels: [`codex:step-${idx+1}`]
              });

