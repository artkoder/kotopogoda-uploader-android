name: Auto Codex CI Fix
on:
  check_suite:
    types: [completed]

permissions:
  checks: read
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: ci-fix-${{ github.event.check_suite.pull_requests[0].number || github.sha }}
  cancel-in-progress: true

jobs:
  request-fix:
    if: >
      github.event.check_suite.pull_requests[0].number != null &&
      github.event.check_suite.conclusion != 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Skip if already requested + collect failing
        id: guard
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.check_suite.pull_requests[0];
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner, repo: context.repo.repo, issue_number: pr.number
            });
            const already = labels.some(l => l.name === 'codex:ci-fix-requested');
            if (already) { core.setOutput('skip', 'true'); return; }

            const { data } = await github.rest.checks.listForSuite({
              owner: context.repo.owner, repo: context.repo.repo,
              check_suite_id: context.payload.check_suite.id
            });
            const failing = (data.check_runs || [])
              .filter(r => r.conclusion && r.conclusion !== 'success')
              .map(r => `• ${r.name}`).join('\n') || 'неизвестно';
            core.setOutput('failing', failing);

      - name: Label & comment to start Codex
        if: steps.guard.outputs.skip != 'true'
        uses: actions/github-script@v7
        env:
          FAILING: ${{ steps.guard.outputs.failing }}
        with:
          script: |
            const pr = context.payload.check_suite.pull_requests[0];

            await github.rest.issues.addLabels({
              owner: context.repo.owner, repo: context.repo.repo,
              issue_number: pr.number, labels: ['codex:ci-fix-requested']
            });

            const body = [
              '@codex',
              'Всегда отвечай и комментируй **на русском**.',
              'Пожалуйста, почини упавшие чеки в этом PR.',
              '',
              'Чеки:',
              process.env.FAILING || 'неизвестно',
              '',
              'Правила: работай в текущей ветке PR; каждый шаг — отдельный коммит; перед следующим шагом запускай тесты/линт. Если остаётся красным — остановись и кратко опиши причину.'
            ].join('\n');

            await github.rest.issues.createComment({
              owner: context.repo.owner, repo: context.repo.repo,
              issue_number: pr.number, body
            });


  clear-label:
    if: >
      github.event.check_suite.pull_requests[0].number != null &&
      github.event.check_suite.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.check_suite.pull_requests[0];
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner, repo: context.repo.repo,
                issue_number: pr.number, name: 'codex:ci-fix-requested'
              });
            } catch {}
