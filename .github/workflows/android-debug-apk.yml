name: Android Debug APK

on:
  push:
    branches:
      - main
      - 'feat/*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive   # ← выкачать субмодули
          fetch-depth: 0          # ← теги для submodule pin

      - name: Guard contract tag
        run: |
          set -euo pipefail
          git -C api/contract fetch origin --tags --force
          TAG_EXPECTED="v1.4.1"
          TAG_ACTUAL=$(git -C api/contract describe --tags --exact-match 2>/dev/null || true)
          if [ -z "$TAG_ACTUAL" ]; then
            echo "::error::Contract tag missing. Expected $TAG_EXPECTED but contract HEAD is not tagged" >&2
            exit 1
          fi
          echo "Contract tag (actual): $TAG_ACTUAL"
          if [ "$TAG_ACTUAL" != "$TAG_EXPECTED" ]; then
            echo "::error::Contract tag mismatch. Expected $TAG_EXPECTED but found $TAG_ACTUAL" >&2
            exit 1
          fi

      - name: Verify contract presence
        run: |
          ls -la api/contract/openapi || true
          test -f api/contract/openapi/openapi.yaml

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle (use system Gradle, no wrapper)
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.9'
          cache-read-only: false

      # --- УСТАНОВКА ANDROID SDK БЕЗ pipefail ---
      - name: Install Android SDK (API 35)
        shell: bash
        run: |
          set -eux
          SDK="$ANDROID_SDK_ROOT"
          mkdir -p "$SDK/cmdline-tools"
          cd /tmp
          curl -L -o cmdtools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdtools.zip
          mv cmdline-tools "$SDK/cmdline-tools/latest"

          "$SDK/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK" --update || true

          # Вызовы через `yes | ...` могут отдавать SIGPIPE -> добавляем `|| true`
          yes | "$SDK/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK" "platform-tools" || true
          yes | "$SDK/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK" "build-tools;35.0.1" || \
          yes | "$SDK/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK" "build-tools;35.0.0" || true
          yes | "$SDK/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK" "platforms;android-35" || true

          yes | "$SDK/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$SDK" --licenses > /dev/null || true

          echo "sdk.dir=$SDK" > local.properties

      # --- OpenAPI generation (uses system gradle) ---
      - name: Generate OpenAPI client
        run: gradle --no-daemon :core:network:openApiGenerate

      # --- Build APK (uses system gradle) ---
      - name: Build debug APK
        run: gradle --no-daemon assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload generated OpenAPI sources
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: generated-openapi
          path: core/network/build/generated/openapi

